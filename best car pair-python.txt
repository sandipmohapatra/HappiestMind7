Best Car Pair
--------------------------------------------------------------------------------------------------------------------- 
 You are given an array A consisting of prizes for N cars.
 A pair of Car(i) and Car(j) is called best if 1<=i<j<= N and gcd(Ai , 2*Aj) >1
 Print the maximum number of best car pairs if you can arbitrarily reorder array A.
 
 Note:
 GCD (x, y) is the greatest common divisor of x and y. 
 
 Function Description
 In the provided code snippet, implement the provided bestCarPair(...) method using the variables to print a single integer denoting the maximum number of best car pairs if you can arbitrarily reorder array A. You can write your code in the space below the phrase “WRITE YOUR LOGIC HERE”.
 
 There will be multiple test cases running so the Input and Output should match exactly as provided.
 
 Input Format
 The first line of the test case contains a single integer N denoting the number of cars in array A.
 The second line of the test case contains N space-separated integers A1, A2, A3, A4 …., AN denoting price of the ith car.
 
 Sample Input
 4 -- denotes N, the number of cars in array A.
 3 6 5 3 -- denotes prices of N cars.
 
 Constraints
 2<= N <=2000
 1<= Ai <=100000
 
 Output Format
 The output contains a single integer denoting the maximum number of best car pairs if you can arbitrarily reorder array A.
 
 Sample Output
 4 
 
 Explanation
 A= [3,6,5,3].
 Array elements can be rearranged as A= [6,3,5,3]
 The following best car pairs are generated:
 1st car and 2nd car form best car pair as GCD (6,2*3)>1;
 1st car and 3rd car form best car pair as GCD (6,2*5)>1;
 1st car and 4th car form best car pair as GCD (6,2*3)>1;
 2nd car and 4th car form best car pair as GCD (3,2*3)>1;
 Thus, a maximum of 4 best car pairs can be formed.
 Hence, the output obtained here is 4.
-----------------------------------------------------------------------------------------------------
java 
-------------
import java.util.*;
 import java.io.*;
 import java.lang.Math; 
 public class Main
 {
  public static int bestCarPair(int N,int[] A)
  { 
	  int i,j,gcd=0,result=0,temp;
	  for( i=0;i<N;i++)
	  {
	      for(j=i+1;j<N;j++)
	      {
	          if(A[i]<A[j])
	          {
	              temp=A[i];
	              A[i]=A[j];
	              A[j]=temp;
	          }
	      }
	  }
	  for( i=0;i<N;i++)
	  {
	      for( j=i+1;j<N;j++)
	      {
	          for(int k=1;k<=A[i] && k<=(2*A[j]);k++)
	          {
	              if(A[i]%k==0 && (2*A[j])%k==0)
	              {
	                  gcd=k;
	              }
	          }
	          if(gcd>1)
	          result++;
	      }
	  }
	  return result;

  }
  public static void main (String[]args)
  {
  Scanner sc = new Scanner (System.in); 
  int N = sc.nextInt (); 
  int[] A = new int[N];
  for (int i = 0; i < N; i++)
  {
  A[i] = sc.nextInt ();
  }  
  sc.close (); 
  System.out.print(bestCarPair(N,A));
  }
 }
---------------------------------------------------------------------------------------------------------------------------------